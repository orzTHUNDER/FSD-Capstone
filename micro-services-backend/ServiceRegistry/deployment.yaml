# apiVersion: v1
# kind: Service
# metadata:
#   name: spring-docker-serviceregistry
# spec:
#   selector:
#     app: spring-docker-serviceregistry
#   template:
#     metadata:
#       labels:
#         app: spring-docker-serviceregistry
#   ports:
#     - protocol: "TCP"
#       port: 8761
#       targetPort: 8761
#   type: LoadBalancer
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: spring-docker-serviceregistry
# spec:
#   selector:
#     matchLabels:
#       app: spring-docker-serviceregistry
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: spring-docker-serviceregistry
#     spec:
#       containers:
#         - name:  spring-docker-serviceregistry
#           image: spring-docker-serviceregistry
#           imagePullPolicy: ifNotPresent
#           ports: 
#             - containerPort: 8761



apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-docker-serviceregistry  # Replace with your microservice name
  labels:
    app: spring-docker-serviceregistry
spec:
  replicas: 1  # Adjust for desired number of replicas
  selector:
    matchLabels:
      app: spring-docker-serviceregistry
  template:
    metadata:
      labels:
        app: spring-docker-serviceregistry
    spec:
      containers:
      - name: spring-docker-serviceregistry
        image: spring-docker-serviceregistry:latest  # Replace with your Docker image details
        # Resource requests and limits (adjust based on your application's needs)
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # Optional: Port configuration (modify if your microservice uses a different port)
        ports:
        - containerPort: 8761 # Adjust if needed
---
apiVersion: v1
kind: Service
metadata:
  name: spring-docker-serviceregistry # Replace with your microservice name
spec:
  selector:
    app: spring-docker-serviceregistry
  ports:
  - protocol: TCP
    port: 8761  # External port for communication (adjust if needed)
    targetPort: 8761  # Internal container port
  type: LoadBalancer