apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-docker-rate # Replace with your microservice name
  labels:
    app: spring-docker-rate
spec:
  replicas: 1  # Adjust for desired number of replicas
  selector:
    matchLabels:
      app: spring-docker-rate
  template:
    metadata:
      labels:
        app: spring-docker-rate
    spec:
      containers:
      - name: spring-docker-rate
        image: spring-docker-rate:latest  # Replace with your Docker image details
        # Resource requests and limits (adjust based on your application's needs)
        env:
        - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
          value: http://spring-docker-serviceregistry:8761/eureka/
        - name: SPRING_APPLICATION_NAME
          value: RateService
        - name: SERVER_PORT
          value: "8081"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        # Optional: Port configuration (modify if your microservice uses a different port)
        ports:
        - containerPort: 8081 # Adjust if needed
---
apiVersion: v1
kind: Service
metadata:
  name: spring-docker-rate # Replace with your microservice name
spec:
  selector:
    app: spring-docker-rate
  ports:
  - protocol: TCP
    port: 8081  # External port for communication (adjust if needed)
    targetPort: 8081  # Internal container port
  type: LoadBalancer